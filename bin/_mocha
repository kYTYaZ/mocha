#!/usr/bin/env node
'use strict';

/* eslint no-unused-vars: off */

/**
 * Module dependencies.
 */

const symbols = require('log-symbols');
const yargs = require('yargs');
const path = require('path');
const getOptions = require('../lib/cli/options');
const commands = require('../lib/cli/commands');
const chalk = require('chalk');
const {repository, homepage, version, gitter} = require('../package.json');

// ensure we can require() from current working directory
module.paths.push(process.cwd(), path.resolve('node_modules'));

// If not already done, load mocha.opts
if (!process.env.LOADED_MOCHA_OPTS) {
  getOptions();
}

Error.stackTraceLimit = Infinity; // configurable via --stack-trace-limit?

yargs
  .scriptName('mocha')
  .command(commands.run)
  .command(commands.init)
  .updateStrings({
    'Positionals:': 'Positional Arguments',
    'Options:': 'Other Options',
    'Commands:': 'Commands'
  })
  .fail((msg, err, yargs) => {
    yargs.showHelp();
    console.error(`\n${symbols.error} ${chalk.red('ERROR:')} ${msg}`);
    process.exit(1);
  })
  .help('help', 'Show usage information & exit')
  .alias('help', 'h')
  .version('version', 'Show version number & exit', version)
  .alias('version', 'V')
  .wrap(80)
  .epilog(
    `Mocha Resources
  Chat: ${chalk.magenta(gitter)}
GitHub: ${chalk.blue(repository.url)}
  Docs: ${chalk.yellow(homepage)}
    `
  )
  .parse();
